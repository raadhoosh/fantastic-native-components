// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search rendering should render a <Search /> 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    color="#f00"
    onChangeText={[Function]}
    primary={true}
    secondary={true}
    success={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          color="#f00"
          name="search"
          onChangeText={[Function]}
          primary={true}
          secondary={true}
          style={
            Object {
              "paddingRight": 7,
            }
          }
          success={true}
          type="FontAwesome"
        />,
        <ForwardRef
          color="#f00"
          onChangeText={[Function]}
          primary={true}
          secondary={true}
          success={true}
        />,
        undefined,
      ],
      "color": "#f00",
      "onChangeText": [Function],
      "primary": true,
      "secondary": true,
      "success": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "color": "#f00",
          "name": "search",
          "onChangeText": [Function],
          "primary": true,
          "secondary": true,
          "style": Object {
            "paddingRight": 7,
          },
          "success": true,
          "type": "FontAwesome",
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-dVhcbM",
            "isStatic": false,
            "rules": Array [
              "      
    color: ",
              [Function],
              "; 
    font-size:",
              [Function],
              ";        
",
            ],
          },
          "displayName": "Styled(WithTheme(Icon))",
          "render": [Function],
          "styledComponentId": "sc-dVhcbM",
          "target": Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "WithTheme(Icon)",
            "render": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "color": "#f00",
          "onChangeText": [Function],
          "primary": true,
          "secondary": true,
          "success": true,
          "value": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "State": Object {
            "blurTextInput": [Function],
            "currentlyFocusedField": [Function],
            "focusTextInput": [Function],
          },
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-fMiknA",
            "isStatic": false,
            "rules": Array [
              "      
    color: ",
              [Function],
              "; 
    font-size:",
              [Function],
              "; 
    background-color: ",
              [Function],
              ";
    border-radius: ",
              [Function],
              "; 
    flex: 1;     
",
            ],
          },
          "displayName": "Styled(TextInput)",
          "getDefaultProps": [Function],
          "render": [Function],
          "styledComponentId": "sc-fMiknA",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      undefined,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-fBuWsC",
        "isStatic": false,
        "rules": Array [
          "     
    flex: 1;  
    flex-direction : row; 
    align-items: center;
    background-color: ",
          [Function],
          ";    
    border: 1px solid ",
          [Function],
          ";        
    width: ",
          [Function],
          ";  
    border-radius: ",
          [Function],
          ";  
    padding-left: 10px;
    padding-right: 10px; 
    overflow: hidden;
",
        ],
      },
      "displayName": "Styled(Component)",
      "render": [Function],
      "styledComponentId": "sc-fBuWsC",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
      Symbol(Symbol.hasInstance): [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            color="#f00"
            name="search"
            onChangeText={[Function]}
            primary={true}
            secondary={true}
            style={
              Object {
                "paddingRight": 7,
              }
            }
            success={true}
            type="FontAwesome"
          />,
          <ForwardRef
            color="#f00"
            onChangeText={[Function]}
            primary={true}
            secondary={true}
            success={true}
          />,
          undefined,
        ],
        "color": "#f00",
        "onChangeText": [Function],
        "primary": true,
        "secondary": true,
        "success": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "color": "#f00",
            "name": "search",
            "onChangeText": [Function],
            "primary": true,
            "secondary": true,
            "style": Object {
              "paddingRight": 7,
            },
            "success": true,
            "type": "FontAwesome",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-dVhcbM",
              "isStatic": false,
              "rules": Array [
                "      
    color: ",
                [Function],
                "; 
    font-size:",
                [Function],
                ";        
",
              ],
            },
            "displayName": "Styled(WithTheme(Icon))",
            "render": [Function],
            "styledComponentId": "sc-dVhcbM",
            "target": Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "WithTheme(Icon)",
              "render": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "color": "#f00",
            "onChangeText": [Function],
            "primary": true,
            "secondary": true,
            "success": true,
            "value": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "State": Object {
              "blurTextInput": [Function],
              "currentlyFocusedField": [Function],
              "focusTextInput": [Function],
            },
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-fMiknA",
              "isStatic": false,
              "rules": Array [
                "      
    color: ",
                [Function],
                "; 
    font-size:",
                [Function],
                "; 
    background-color: ",
                [Function],
                ";
    border-radius: ",
                [Function],
                "; 
    flex: 1;     
",
              ],
            },
            "displayName": "Styled(TextInput)",
            "getDefaultProps": [Function],
            "render": [Function],
            "styledComponentId": "sc-fMiknA",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        undefined,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-fBuWsC",
          "isStatic": false,
          "rules": Array [
            "     
    flex: 1;  
    flex-direction : row; 
    align-items: center;
    background-color: ",
            [Function],
            ";    
    border: 1px solid ",
            [Function],
            ";        
    width: ",
            [Function],
            ";  
    border-radius: ",
            [Function],
            ";  
    padding-left: 10px;
    padding-right: 10px; 
    overflow: hidden;
",
          ],
        },
        "displayName": "Styled(Component)",
        "render": [Function],
        "styledComponentId": "sc-fBuWsC",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
