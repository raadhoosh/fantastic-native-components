// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Text rendering should render a <Text /> 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Text
    color="#f00"
    primary={true}
  >
    text
  </Text>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": "text",
      "color": "#f00",
      "primary": true,
    },
    "ref": null,
    "rendered": "text",
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
color: ",
          [Function],
          "; 
font-weight:",
          [Function],
          "; 
text-align:",
          [Function],
          "; 
font-size:",
          [Function],
          ";         
width: auto       
",
        ],
      },
      "displayName": "Styled(Component)",
      "propTypes": Object {
        "accessible": [Function],
        "adjustsFontSizeToFit": [Function],
        "allowFontScaling": [Function],
        "disabled": [Function],
        "ellipsizeMode": [Function],
        "minimumFontScale": [Function],
        "nativeID": [Function],
        "numberOfLines": [Function],
        "onLayout": [Function],
        "onLongPress": [Function],
        "onPress": [Function],
        "pressRetentionOffset": [Function],
        "selectable": [Function],
        "selectionColor": [Function],
        "style": [Function],
        "suppressHighlighting": [Function],
        "testID": [Function],
        "textBreakStrategy": [Function],
      },
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
      Symbol(Symbol.hasInstance): [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "text",
        "color": "#f00",
        "primary": true,
      },
      "ref": null,
      "rendered": "text",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "rules": Array [
            "
color: ",
            [Function],
            "; 
font-weight:",
            [Function],
            "; 
text-align:",
            [Function],
            "; 
font-size:",
            [Function],
            ";         
width: auto       
",
          ],
        },
        "displayName": "Styled(Component)",
        "propTypes": Object {
          "accessible": [Function],
          "adjustsFontSizeToFit": [Function],
          "allowFontScaling": [Function],
          "disabled": [Function],
          "ellipsizeMode": [Function],
          "minimumFontScale": [Function],
          "nativeID": [Function],
          "numberOfLines": [Function],
          "onLayout": [Function],
          "onLongPress": [Function],
          "onPress": [Function],
          "pressRetentionOffset": [Function],
          "selectable": [Function],
          "selectionColor": [Function],
          "style": [Function],
          "suppressHighlighting": [Function],
          "testID": [Function],
          "textBreakStrategy": [Function],
        },
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
