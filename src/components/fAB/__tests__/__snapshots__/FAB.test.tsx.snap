// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FAB rendering should render a <FAB /> 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FAB
    color="#f00"
    onPress={[Function]}
    primary={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "activeOpacity": 0.7,
      "children": Array [
        <ForwardRef
          color="#f00"
          name="plus"
          onPress={[Function]}
          primary={true}
          type="FontAwesome"
        />,
        undefined,
      ],
      "color": "#f00",
      "onPress": [Function],
      "primary": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "color": "#f00",
          "name": "plus",
          "onPress": [Function],
          "primary": true,
          "size": undefined,
          "type": "FontAwesome",
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-dVhcbM",
            "isStatic": false,
            "rules": Array [
              "     
    color: ",
              [Function],
              ";
    font-size:",
              [Function],
              "; 
   ",
            ],
          },
          "displayName": "Styled(WithTheme(Icon))",
          "render": [Function],
          "styledComponentId": "sc-dVhcbM",
          "target": Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "WithTheme(Icon)",
            "render": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      undefined,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-fBuWsC",
        "isStatic": false,
        "rules": Array [
          "  
    flex: 1;
    flex-direction: row;   
    justify-content: center;
    align-items: center;
    background-color: ",
          [Function],
          ";    
    border: 1px solid ",
          [Function],
          ";        
    width: ",
          [Function],
          ";  
    height: ",
          [Function],
          ";  
    border-radius: ",
          [Function],
          ";
    padding-left: 10;
    padding-right: 10;    
    padding-top: 5;
    padding-bottom: 5; 
    position: absolute;
    top:",
          [Function],
          ";
    bottom:",
          [Function],
          "; 
    left:",
          [Function],
          ";
    right:",
          [Function],
          ";  
    ",
          "shadow-color: #000; shadowOffset {
  width: 0; height: 2px;
} shadow-opacity: 0.8px; shadow-radius: 2px; elevation: 10px;",
          "    
",
        ],
      },
      "displayName": "Styled(TouchableOpacity)",
      "getDefaultProps": [Function],
      "render": [Function],
      "styledComponentId": "sc-fBuWsC",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
      Symbol(Symbol.hasInstance): [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "activeOpacity": 0.7,
        "children": Array [
          <ForwardRef
            color="#f00"
            name="plus"
            onPress={[Function]}
            primary={true}
            type="FontAwesome"
          />,
          undefined,
        ],
        "color": "#f00",
        "onPress": [Function],
        "primary": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "color": "#f00",
            "name": "plus",
            "onPress": [Function],
            "primary": true,
            "size": undefined,
            "type": "FontAwesome",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-dVhcbM",
              "isStatic": false,
              "rules": Array [
                "     
    color: ",
                [Function],
                ";
    font-size:",
                [Function],
                "; 
   ",
              ],
            },
            "displayName": "Styled(WithTheme(Icon))",
            "render": [Function],
            "styledComponentId": "sc-dVhcbM",
            "target": Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "WithTheme(Icon)",
              "render": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        undefined,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-fBuWsC",
          "isStatic": false,
          "rules": Array [
            "  
    flex: 1;
    flex-direction: row;   
    justify-content: center;
    align-items: center;
    background-color: ",
            [Function],
            ";    
    border: 1px solid ",
            [Function],
            ";        
    width: ",
            [Function],
            ";  
    height: ",
            [Function],
            ";  
    border-radius: ",
            [Function],
            ";
    padding-left: 10;
    padding-right: 10;    
    padding-top: 5;
    padding-bottom: 5; 
    position: absolute;
    top:",
            [Function],
            ";
    bottom:",
            [Function],
            "; 
    left:",
            [Function],
            ";
    right:",
            [Function],
            ";  
    ",
            "shadow-color: #000; shadowOffset {
  width: 0; height: 2px;
} shadow-opacity: 0.8px; shadow-radius: 2px; elevation: 10px;",
            "    
",
          ],
        },
        "displayName": "Styled(TouchableOpacity)",
        "getDefaultProps": [Function],
        "render": [Function],
        "styledComponentId": "sc-fBuWsC",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
