// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Radio rendering toMatchSnapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Radio
    onPress={[Function]}
    primary={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          onPress={[Function]}
          primary={true}
        />,
        <ForwardRef />,
      ],
      "onPress": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": undefined,
          "onPress": [Function],
          "primary": true,
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-chPdSV",
            "isStatic": false,
            "rules": Array [
              "      
    border: 2px solid ",
              [Function],
              ";        
    width: ",
              [Function],
              ";       
    height: ",
              [Function],
              ";             
    border-radius: 500;     
    justify-content: center;
    align-items: center;
    background-color: #fff;
    margin-bottom: 5; 
    margin-right: 5;   
",
            ],
          },
          "displayName": "Styled(Component)",
          "render": [Function],
          "styledComponentId": "sc-chPdSV",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": undefined,
          "fontSize": undefined,
          "textColor": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-kgoBCf",
            "isStatic": false,
            "rules": Array [
              "
   color: ",
              [Function],
              ";    
   font-size: ",
              [Function],
              ";    
   flex: 1;
   align-items: center;
   justify-content: center;
   height: 100%;
",
            ],
          },
          "displayName": "Styled(Component)",
          "propTypes": Object {
            "accessible": [Function],
            "adjustsFontSizeToFit": [Function],
            "allowFontScaling": [Function],
            "disabled": [Function],
            "ellipsizeMode": [Function],
            "minimumFontScale": [Function],
            "nativeID": [Function],
            "numberOfLines": [Function],
            "onLayout": [Function],
            "onLongPress": [Function],
            "onPress": [Function],
            "pressRetentionOffset": [Function],
            "selectable": [Function],
            "selectionColor": [Function],
            "style": [Function],
            "suppressHighlighting": [Function],
            "testID": [Function],
            "textBreakStrategy": [Function],
          },
          "render": [Function],
          "styledComponentId": "sc-kgoBCf",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-kAzzGY",
        "isStatic": true,
        "rules": Array [
          "      
   flex: 1;
   flex-direction: row;
   align-items: center;   
",
        ],
      },
      "displayName": "Styled(TouchableOpacity)",
      "getDefaultProps": [Function],
      "render": [Function],
      "styledComponentId": "sc-kAzzGY",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
      Symbol(Symbol.hasInstance): [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            onPress={[Function]}
            primary={true}
          />,
          <ForwardRef />,
        ],
        "onPress": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": undefined,
            "onPress": [Function],
            "primary": true,
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-chPdSV",
              "isStatic": false,
              "rules": Array [
                "      
    border: 2px solid ",
                [Function],
                ";        
    width: ",
                [Function],
                ";       
    height: ",
                [Function],
                ";             
    border-radius: 500;     
    justify-content: center;
    align-items: center;
    background-color: #fff;
    margin-bottom: 5; 
    margin-right: 5;   
",
              ],
            },
            "displayName": "Styled(Component)",
            "render": [Function],
            "styledComponentId": "sc-chPdSV",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": undefined,
            "fontSize": undefined,
            "textColor": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-kgoBCf",
              "isStatic": false,
              "rules": Array [
                "
   color: ",
                [Function],
                ";    
   font-size: ",
                [Function],
                ";    
   flex: 1;
   align-items: center;
   justify-content: center;
   height: 100%;
",
              ],
            },
            "displayName": "Styled(Component)",
            "propTypes": Object {
              "accessible": [Function],
              "adjustsFontSizeToFit": [Function],
              "allowFontScaling": [Function],
              "disabled": [Function],
              "ellipsizeMode": [Function],
              "minimumFontScale": [Function],
              "nativeID": [Function],
              "numberOfLines": [Function],
              "onLayout": [Function],
              "onLongPress": [Function],
              "onPress": [Function],
              "pressRetentionOffset": [Function],
              "selectable": [Function],
              "selectionColor": [Function],
              "style": [Function],
              "suppressHighlighting": [Function],
              "testID": [Function],
              "textBreakStrategy": [Function],
            },
            "render": [Function],
            "styledComponentId": "sc-kgoBCf",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-kAzzGY",
          "isStatic": true,
          "rules": Array [
            "      
   flex: 1;
   flex-direction: row;
   align-items: center;   
",
          ],
        },
        "displayName": "Styled(TouchableOpacity)",
        "getDefaultProps": [Function],
        "render": [Function],
        "styledComponentId": "sc-kAzzGY",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
