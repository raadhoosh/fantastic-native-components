// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardImages rendering should render a <CardImages /> 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardImages
    color="#f00"
    onPress={[Function]}
    primary={true}
    source={
      Object {
        "testUri": "../../../src/screens/imagePage/img_avatar3.png",
      }
    }
  >
    CardImages
  </CardImages>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "activeOpacity": 0.8,
      "children": Array [
        <ForwardRef
          source={
            Object {
              "testUri": "../../../src/screens/imagePage/img_avatar3.png",
            }
          }
        />,
        <ForwardRef
          color="#f00"
          onPress={[Function]}
          primary={true}
          source={
            Object {
              "testUri": "../../../src/screens/imagePage/img_avatar3.png",
            }
          }
        >
          <ForwardRef
            color="#f00"
            onPress={[Function]}
            primary={true}
            source={
              Object {
                "testUri": "../../../src/screens/imagePage/img_avatar3.png",
              }
            }
          />
          <ForwardRef
            color="#f00"
            onPress={[Function]}
            primary={true}
            source={
              Object {
                "testUri": "../../../src/screens/imagePage/img_avatar3.png",
              }
            }
          />
        </ForwardRef>,
      ],
      "color": "#f00",
      "onPress": [Function],
      "primary": true,
      "source": Object {
        "testUri": "../../../src/screens/imagePage/img_avatar3.png",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "imageHeight": undefined,
          "imageWidth": undefined,
          "source": Object {
            "testUri": "../../../src/screens/imagePage/img_avatar3.png",
          },
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "rules": Array [
              "
    border-radius: ",
              [Function],
              ";
    width: ",
              [Function],
              ";
    height: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "Styled(Component)",
          "getSize": [Function],
          "prefetch": [Function],
          "propTypes": Object {
            "accessibilityLabel": [Function],
            "accessible": [Function],
            "blurRadius": [Function],
            "capInsets": [Function],
            "defaultSource": [Function],
            "onError": [Function],
            "onLayout": [Function],
            "onLoad": [Function],
            "onLoadEnd": [Function],
            "onLoadStart": [Function],
            "onPartialLoad": [Function],
            "onProgress": [Function],
            "resizeMethod": [Function],
            "resizeMode": [Function],
            "source": [Function],
            "style": [Function],
            "testID": [Function],
          },
          "render": [Function],
          "resolveAssetSource": [Function],
          "styledComponentId": "sc-htpNat",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              color="#f00"
              onPress={[Function]}
              primary={true}
              source={
                Object {
                  "testUri": "../../../src/screens/imagePage/img_avatar3.png",
                }
              }
            />,
            <ForwardRef
              color="#f00"
              onPress={[Function]}
              primary={true}
              source={
                Object {
                  "testUri": "../../../src/screens/imagePage/img_avatar3.png",
                }
              }
            />,
          ],
          "color": "#f00",
          "onPress": [Function],
          "primary": true,
          "source": Object {
            "testUri": "../../../src/screens/imagePage/img_avatar3.png",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "center": undefined,
              "children": undefined,
              "color": "#f00",
              "onPress": [Function],
              "primary": true,
              "source": Object {
                "testUri": "../../../src/screens/imagePage/img_avatar3.png",
              },
              "titleColor": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-ifAKCX",
                "isStatic": false,
                "rules": Array [
                  "
    text-align: ",
                  [Function],
                  ";
    color: ",
                  [Function],
                  ";
    font-size:",
                  [Function],
                  ";
",
                ],
              },
              "displayName": "Styled(Component)",
              "propTypes": Object {
                "accessible": [Function],
                "adjustsFontSizeToFit": [Function],
                "allowFontScaling": [Function],
                "disabled": [Function],
                "ellipsizeMode": [Function],
                "minimumFontScale": [Function],
                "nativeID": [Function],
                "numberOfLines": [Function],
                "onLayout": [Function],
                "onLongPress": [Function],
                "onPress": [Function],
                "pressRetentionOffset": [Function],
                "selectable": [Function],
                "selectionColor": [Function],
                "style": [Function],
                "suppressHighlighting": [Function],
                "testID": [Function],
                "textBreakStrategy": [Function],
              },
              "render": [Function],
              "styledComponentId": "sc-ifAKCX",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "center": undefined,
              "children": undefined,
              "color": "#f00",
              "onPress": [Function],
              "primary": true,
              "source": Object {
                "testUri": "../../../src/screens/imagePage/img_avatar3.png",
              },
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-EHOje",
                "isStatic": false,
                "rules": Array [
                  "
    text-align: ",
                  [Function],
                  ";
    color: ",
                  [Function],
                  ";
    padding-top:10;
",
                ],
              },
              "displayName": "Styled(Component)",
              "propTypes": Object {
                "accessible": [Function],
                "adjustsFontSizeToFit": [Function],
                "allowFontScaling": [Function],
                "disabled": [Function],
                "ellipsizeMode": [Function],
                "minimumFontScale": [Function],
                "nativeID": [Function],
                "numberOfLines": [Function],
                "onLayout": [Function],
                "onLongPress": [Function],
                "onPress": [Function],
                "pressRetentionOffset": [Function],
                "selectable": [Function],
                "selectionColor": [Function],
                "style": [Function],
                "suppressHighlighting": [Function],
                "testID": [Function],
                "textBreakStrategy": [Function],
              },
              "render": [Function],
              "styledComponentId": "sc-EHOje",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "rules": Array [
              "
    width: ",
              [Function],
              ";
    background-color: ",
              [Function],
              ";
    color: ",
              [Function],
              ";
    padding: 12px;
",
            ],
          },
          "displayName": "Styled(Component)",
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": false,
        "rules": Array [
          "
    border: 1px solid  ",
          [Function],
          ";
    width: ",
          [Function],
          ";
    height: ",
          [Function],
          ";
    border-radius: ",
          [Function],
          ";
    flex: 1;
    box-shadow: 10px 5px 5px #000;
",
        ],
      },
      "displayName": "Styled(TouchableOpacity)",
      "getDefaultProps": [Function],
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
      Symbol(Symbol.hasInstance): [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "activeOpacity": 0.8,
        "children": Array [
          <ForwardRef
            source={
              Object {
                "testUri": "../../../src/screens/imagePage/img_avatar3.png",
              }
            }
          />,
          <ForwardRef
            color="#f00"
            onPress={[Function]}
            primary={true}
            source={
              Object {
                "testUri": "../../../src/screens/imagePage/img_avatar3.png",
              }
            }
          >
            <ForwardRef
              color="#f00"
              onPress={[Function]}
              primary={true}
              source={
                Object {
                  "testUri": "../../../src/screens/imagePage/img_avatar3.png",
                }
              }
            />
            <ForwardRef
              color="#f00"
              onPress={[Function]}
              primary={true}
              source={
                Object {
                  "testUri": "../../../src/screens/imagePage/img_avatar3.png",
                }
              }
            />
          </ForwardRef>,
        ],
        "color": "#f00",
        "onPress": [Function],
        "primary": true,
        "source": Object {
          "testUri": "../../../src/screens/imagePage/img_avatar3.png",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "imageHeight": undefined,
            "imageWidth": undefined,
            "source": Object {
              "testUri": "../../../src/screens/imagePage/img_avatar3.png",
            },
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
    border-radius: ",
                [Function],
                ";
    width: ",
                [Function],
                ";
    height: ",
                [Function],
                ";
",
              ],
            },
            "displayName": "Styled(Component)",
            "getSize": [Function],
            "prefetch": [Function],
            "propTypes": Object {
              "accessibilityLabel": [Function],
              "accessible": [Function],
              "blurRadius": [Function],
              "capInsets": [Function],
              "defaultSource": [Function],
              "onError": [Function],
              "onLayout": [Function],
              "onLoad": [Function],
              "onLoadEnd": [Function],
              "onLoadStart": [Function],
              "onPartialLoad": [Function],
              "onProgress": [Function],
              "resizeMethod": [Function],
              "resizeMode": [Function],
              "source": [Function],
              "style": [Function],
              "testID": [Function],
            },
            "render": [Function],
            "resolveAssetSource": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                color="#f00"
                onPress={[Function]}
                primary={true}
                source={
                  Object {
                    "testUri": "../../../src/screens/imagePage/img_avatar3.png",
                  }
                }
              />,
              <ForwardRef
                color="#f00"
                onPress={[Function]}
                primary={true}
                source={
                  Object {
                    "testUri": "../../../src/screens/imagePage/img_avatar3.png",
                  }
                }
              />,
            ],
            "color": "#f00",
            "onPress": [Function],
            "primary": true,
            "source": Object {
              "testUri": "../../../src/screens/imagePage/img_avatar3.png",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "center": undefined,
                "children": undefined,
                "color": "#f00",
                "onPress": [Function],
                "primary": true,
                "source": Object {
                  "testUri": "../../../src/screens/imagePage/img_avatar3.png",
                },
                "titleColor": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": false,
                  "rules": Array [
                    "
    text-align: ",
                    [Function],
                    ";
    color: ",
                    [Function],
                    ";
    font-size:",
                    [Function],
                    ";
",
                  ],
                },
                "displayName": "Styled(Component)",
                "propTypes": Object {
                  "accessible": [Function],
                  "adjustsFontSizeToFit": [Function],
                  "allowFontScaling": [Function],
                  "disabled": [Function],
                  "ellipsizeMode": [Function],
                  "minimumFontScale": [Function],
                  "nativeID": [Function],
                  "numberOfLines": [Function],
                  "onLayout": [Function],
                  "onLongPress": [Function],
                  "onPress": [Function],
                  "pressRetentionOffset": [Function],
                  "selectable": [Function],
                  "selectionColor": [Function],
                  "style": [Function],
                  "suppressHighlighting": [Function],
                  "testID": [Function],
                  "textBreakStrategy": [Function],
                },
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "center": undefined,
                "children": undefined,
                "color": "#f00",
                "onPress": [Function],
                "primary": true,
                "source": Object {
                  "testUri": "../../../src/screens/imagePage/img_avatar3.png",
                },
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "rules": Array [
                    "
    text-align: ",
                    [Function],
                    ";
    color: ",
                    [Function],
                    ";
    padding-top:10;
",
                  ],
                },
                "displayName": "Styled(Component)",
                "propTypes": Object {
                  "accessible": [Function],
                  "adjustsFontSizeToFit": [Function],
                  "allowFontScaling": [Function],
                  "disabled": [Function],
                  "ellipsizeMode": [Function],
                  "minimumFontScale": [Function],
                  "nativeID": [Function],
                  "numberOfLines": [Function],
                  "onLayout": [Function],
                  "onLongPress": [Function],
                  "onPress": [Function],
                  "pressRetentionOffset": [Function],
                  "selectable": [Function],
                  "selectionColor": [Function],
                  "style": [Function],
                  "suppressHighlighting": [Function],
                  "testID": [Function],
                  "textBreakStrategy": [Function],
                },
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": false,
              "rules": Array [
                "
    width: ",
                [Function],
                ";
    background-color: ",
                [Function],
                ";
    color: ",
                [Function],
                ";
    padding: 12px;
",
              ],
            },
            "displayName": "Styled(Component)",
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwzfXH",
          "isStatic": false,
          "rules": Array [
            "
    border: 1px solid  ",
            [Function],
            ";
    width: ",
            [Function],
            ";
    height: ",
            [Function],
            ";
    border-radius: ",
            [Function],
            ";
    flex: 1;
    box-shadow: 10px 5px 5px #000;
",
          ],
        },
        "displayName": "Styled(TouchableOpacity)",
        "getDefaultProps": [Function],
        "render": [Function],
        "styledComponentId": "sc-bwzfXH",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
