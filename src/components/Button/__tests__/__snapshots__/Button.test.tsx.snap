// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button rendering should render a <Button /> 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    color="#f00"
    primary={true}
    secondary={true}
    success={true}
  >
    Button
  </Button>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "activeOpacity": 0.8,
      "children": <ForwardRef
        color="#f00"
        primary={true}
        secondary={true}
        success={true}
      >
        Button
      </ForwardRef>,
      "color": "#f00",
      "onPress": undefined,
      "primary": true,
      "secondary": true,
      "success": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "Button",
        "color": "#f00",
        "primary": true,
        "secondary": true,
        "success": true,
      },
      "ref": null,
      "rendered": "Button",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwzfXH",
          "isStatic": false,
          "rules": Array [
            "    
    text-align: center;
    color: ",
            [Function],
            ";    
",
          ],
        },
        "displayName": "Styled(Component)",
        "propTypes": Object {
          "accessible": [Function],
          "adjustsFontSizeToFit": [Function],
          "allowFontScaling": [Function],
          "disabled": [Function],
          "ellipsizeMode": [Function],
          "minimumFontScale": [Function],
          "nativeID": [Function],
          "numberOfLines": [Function],
          "onLayout": [Function],
          "onLongPress": [Function],
          "onPress": [Function],
          "pressRetentionOffset": [Function],
          "selectable": [Function],
          "selectionColor": [Function],
          "style": [Function],
          "suppressHighlighting": [Function],
          "testID": [Function],
          "textBreakStrategy": [Function],
        },
        "render": [Function],
        "styledComponentId": "sc-bwzfXH",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "    
    background-color: ",
          [Function],
          "; 
    background-color: ",
          [Function],
          ";
    border: 1px solid ",
          [Function],
          ";        
    width: ",
          [Function],
          ";    
    border-radius: 3px;
    margin-bottom: 5px;
    padding: 5px 10px;
",
        ],
      },
      "displayName": "Styled(TouchableOpacity)",
      "getDefaultProps": [Function],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
      Symbol(Symbol.hasInstance): [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "activeOpacity": 0.8,
        "children": <ForwardRef
          color="#f00"
          primary={true}
          secondary={true}
          success={true}
        >
          Button
        </ForwardRef>,
        "color": "#f00",
        "onPress": undefined,
        "primary": true,
        "secondary": true,
        "success": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Button",
          "color": "#f00",
          "primary": true,
          "secondary": true,
          "success": true,
        },
        "ref": null,
        "rendered": "Button",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "rules": Array [
              "    
    text-align: center;
    color: ",
              [Function],
              ";    
",
            ],
          },
          "displayName": "Styled(Component)",
          "propTypes": Object {
            "accessible": [Function],
            "adjustsFontSizeToFit": [Function],
            "allowFontScaling": [Function],
            "disabled": [Function],
            "ellipsizeMode": [Function],
            "minimumFontScale": [Function],
            "nativeID": [Function],
            "numberOfLines": [Function],
            "onLayout": [Function],
            "onLongPress": [Function],
            "onPress": [Function],
            "pressRetentionOffset": [Function],
            "selectable": [Function],
            "selectionColor": [Function],
            "style": [Function],
            "suppressHighlighting": [Function],
            "testID": [Function],
            "textBreakStrategy": [Function],
          },
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "rules": Array [
            "    
    background-color: ",
            [Function],
            "; 
    background-color: ",
            [Function],
            ";
    border: 1px solid ",
            [Function],
            ";        
    width: ",
            [Function],
            ";    
    border-radius: 3px;
    margin-bottom: 5px;
    padding: 5px 10px;
",
          ],
        },
        "displayName": "Styled(TouchableOpacity)",
        "getDefaultProps": [Function],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
